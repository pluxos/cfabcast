akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logger-startup-timeout = 10s
  # To turn off logging
  #stdout-loglevel = "OFF"
  #loglevel = "OFF"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "INFO"
  log-dead-letters = 10
  log-dead-letters-during-shutdown = off
  log-config-on-start = off

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    serialize-messages = on
    
    serializers {
      cfabcaster = "cfabcast.serialization.CFABCastSerializer"
    }

    serialization-bindings {
      "cfabcast.messages.CFABCastMessage" = cfabcaster
    }

    debug {
      receive = on
      autoreceive = on
      lifecycle = on
      event-stream = on
    }
  }

  remote {
    transport = "akka.remote.netty.NettyRemoteTransport"
    log-sent-messages = on
    log-received-messages = on
    log-remote-lifecycle-events = on
    netty.tcp {
#      hostname = "127.0.0.1"
#      port = 0
    }
  }

  cluster {
    roles = []

    # Set seed node in a enviromment variable
    seed-nodes = [
      "akka.tcp://CFABCastSystem@127.0.0.1:2551",
      "akka.tcp://CFABCastSystem@127.0.0.1:2552"
    ]

    auto-down-unreachable-after = 10s

    extensions = ["akka.contrib.pattern.ClusterReceptionistExtension"]

#    failure-detector {
#      threshold = 12
#      acceptable-heartbeat-pause = 60s
#      heartbeat-interval = 5s
#      heartbeat-request {
#        expected-response-after = 20s
#      }
#    }
  }

  persistence {
     journal.plugin = "akka.persistence.journal.leveldb-shared"
     journal.leveldb-shared.store {
        # FIXME: DO NOT USE 'native = off' IN PRODUCTION !
        native = off
        dir = "target/shared-journal"
     }
     snapshot-store.local.dir = "target/snapshots"
  }
}
